@page "/"
@rendermode InteractiveServer

@using BlazorUI.ViewModels
@using HFTLibrary.Data
@using SessionData

@inject IEFCoreData _db;
@inject SessionData _session;
@inject NavigationManager _nav;
@inject IConfiguration _config;

<PageTitle>@_config["AppShortName"] - Finanzpläne</PageTitle>

<div class="container-fluid border-bottom border-1 mb-3 px-0">
    <div class="row mx-0 mb-3">
        <div class="col p-0 text-center">
            <h3 class="mb-0 mt-1">Finanzpläne</h3>
        </div>

        <div class="col-auto p-0 text-end">
            <div class="col-auto bi bi-plus-lg btn btn-outline-secondary py-2" title="Neue Ausgabe hinzufügen" @onclick="OnAddFinancialPlanButtonClick" />
        </div>
    </div>
</div>

<div class="container-fluid mb-4 px-0">
    @if (_financialPlans is null)
    {
        <div class="row">
            <p class="fs-4 text-danger">Kein Finanzplan ausgewählt!</p>
        </div>
    }
    else if (_financialPlans.Count() == 0)
    {
        <div class="row">
            <p class="fs-4 text-danger">Es sind noch keine Finanzpläne verfügbar!</p>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col">

                <div class="card">
                    <div class="card-header py-1">

                        <div class="row fw-bold my-2">
                            <div class="col-1">
                                <label>Pos.</label>
                            </div>

                            <div class="col">
                                <label>Bezeichnung</label>
                            </div>
                        </div>
                    </div>

                    <div class="card-body py-0">
                        @for (int i = 0; i < _financialPlans.Count; i++)
                        {
                            var plan = _financialPlans[i];
                            string rowClass = string.Empty;

                            @if (i < _financialPlans.Count - 1)
                            {
                                rowClass = "row align-items-center border-bottom border-1 py-1 link-primary";
                            }
                            else
                            {
                                rowClass = "row align-items-center py-1 link-primary";
                            }
                            <div class="@rowClass" role="button" onclick="@(() => HandleClick(plan.Id))">
                                <div class="col-1">
                                    <label role="button" onclick="@(() => HandleClick(plan.Id))">@(i + 1)</label>
                                </div>

                                <div class="col">
                                    <label role="button" onclick="@(() => HandleClick(plan.Id))">@plan.Name</label>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code
{
    private List<FinancialPlanLazyViewModel>? _financialPlans = [];

    protected override async Task OnInitializedAsync()
    {
        var dtos = await _db.GetFinancialPlanListLazyAsync();
        dtos.ForEach(x => _financialPlans!.Add(x.ToFinancialPlanLazyViewModel()));

        await base.OnInitializedAsync();
    }

    private void OnAddFinancialPlanButtonClick()
    {
        
    }

    private void OnModifyFinancialPlanButtonClick(int id)
    {
        
    }

    private void HandleClick(int id)
    {
        _session.SelectedFinancialPlanId = id;
        _nav.NavigateTo($"/FinancialPlanData");
    }
}