@using HFTLibrary.Data
@using HFTLibrary.Models
@using HFTLibrary.DTOs
@using HFTLibrary.Logic
@using SessionData

@inject IEFCoreData _db;
@inject SessionData _session;
@inject NavigationManager _nav;

<div class="row card bg-danger">
    <div class="card-body text-white">
        <h5 class="card-title border-bottom border-2 border-warning">Löschung bestätigen!</h5>

        <div class="row">
            <div class="col">
                <label>Möchten Sie den folgenden Finanzplan wirklich vollständig löschen?</label>
            </div>
        </div>

        <div class="row bg-info text-black my-2 gx-1 px-1 rounded">
            <label>Nane: @_financialPlan?.Name</label>
            <label>Beschreibung: @_financialPlan?.Description</label>
        </div>

        <div class="row">
            <label>ACHTUNG: Auch alle zugehörigen Daten wie Bankkonten und Sparpläne werden endgültig gelöscht!</label>
        </div>

        <div class="row my-2">
            <div class="col-2 offset-8">
                <button class="btn btn-outline-secondary" @onclick="@(() => HandleButtonClickAsync(false))">Abbrechen</button>
            </div>
            <div class="col-2">
                <button class="btn btn-outline-primary" @onclick="@(() => HandleButtonClickAsync(true))">Löschen</button>
            </div>
        </div>
    </div>
</div>

@code
{
    private FinancialPlanDTO? _financialPlan;

    [Parameter]
    public EventCallback<bool> OnDialogClosed { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _financialPlan = await _db.GetFinancialPlanAsync(_session.SelectedFinancialPlanId);
    }

    private async Task HandleButtonClickAsync(bool doDelete)
    {
        await OnDialogClosed.InvokeAsync(true);

        if (doDelete == false)
        {
            _nav.NavigateTo($"/FinancialPlanData");
            return;
        }

        await _db.DeleteFinancialPlanAsync(_session.SelectedFinancialPlanId);
        _session.SelectedFinancialPlanId = 0;
        _nav.NavigateTo($"/");
    }
}