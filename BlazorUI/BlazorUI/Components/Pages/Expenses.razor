@page "/Expenses"
@rendermode InteractiveServer

@using System.Diagnostics
@using BlazorUI.ViewModels
@using HFTLibrary.Data
@using HFTLibrary.Models
@using SessionData

@inject IEFCoreData _db;
@inject NavigationManager _nav;
@inject SessionData _session;
@inject IConfiguration _config;

<PageTitle>@_config["AppShortName"] - Ausgaben</PageTitle>

<div class="container mb-4">
    <div class="row">
        <h3>Ausgaben</h3>
    </div>

    @if (_financialPlan is null)
    {
        <div class="row">
            <p class="fs-4 text-danger">Kein Finanzplan ausgewählt!</p>
        </div>
    }
    else if (_showDeleteConfirmDialog)
    {
        <div class="row">
            <p class="fs-4 text-danger">TODO: Lösch-Dialog für Ausgaben!</p>
        </div>
    }
    else
    {
        <div class="row">
            <div class="row card">
                <div class="col">

                    <div class="row my-2">
                        <div class="col-1">
                            <label>Pos.</label>
                        </div>

                        <div class="col">
                            <label>Bezeichnung</label>
                        </div>

                        <div class="col-3">
                            <label>Konto</label>
                        </div>

                        <div class="col-2">
                            <label>Betrag</label>
                        </div>

                        <div class="col-1">
                            <label>&nbsp;</label>
                        </div>
                    </div>

                    @for (int i = 0; i < _financialPlan.Expenses.Count; i++)
                    {
                        var expense = _financialPlan.Expenses[i];

                        <div class="row align-items-center border-top border-bottom border-1">
                            <div class="col-1">
                                <label>@(i + 1)</label>
                            </div>

                            <div class="col">
                                <label>@expense.Name</label>
                            </div>

                            <div class="col-3">
                                <label>@expense.AssociatedBankAccount?.Name</label>
                            </div>

                            <div class="col-2">
                                <label>@expense.PriceString</label>
                            </div>

                            <div class="col-1 bi bi-three-dots-vertical btn" title="Einkommen bearbeiten" @onclick="@(() => OnModifyExpenseButtonClick(expense.Id))" />
                        </div>
                    }

                </div>
            </div>
        </div>
    }

</div>

@code {
    private FinancialPlanViewModel? _financialPlan = null;
    private bool _showDeleteConfirmDialog = false;

    protected override async Task OnInitializedAsync()
    {
        _financialPlan = (await _db.GetFinancialPlanAsync(_session.SelectedFinancialPlanId))?.ToFinancialPlanViewModel();
    }

    private void OnModifyExpenseButtonClick(int expenseId)
    {
        Debug.WriteLine($"In {nameof(OnModifyExpenseButtonClick)}() - {expenseId}");
        _nav.NavigateTo($"/ModifyExpense/{expenseId}");
    }
}